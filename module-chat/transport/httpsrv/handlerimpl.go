/**
* Generated by go-doudou v2.5.9.
* You can edit it as your need.
 */
package httpsrv

import (
	"context"
	service "go-doudou-rag/module-chat"
	"go-doudou-rag/module-chat/dto"
	"net/http"

	"github.com/bytedance/sonic"
	"github.com/unionj-cloud/go-doudou/v2/framework/rest"
)

var json = sonic.ConfigDefault

type ModuleChatHandlerImpl struct {
	moduleChat service.ModuleChat
}

func (receiver *ModuleChatHandlerImpl) Chat(_writer http.ResponseWriter, _req *http.Request) {
	var (
		ctx context.Context
		req dto.ChatRequest
		err error
	)
	ctx = _req.Context()
	if _err := json.NewDecoder(_req.Body).Decode(&req); _err != nil {
		rest.HandleBadRequestErr(_err)
	} else {
		if _err := rest.ValidateStruct(req); _err != nil {
			rest.HandleBadRequestErr(_err)
		}
	}
	err = receiver.moduleChat.Chat(
		ctx,
		req,
	)
	if err != nil {
		panic(err)
	}
}

func NewModuleChatHandler(moduleChat service.ModuleChat) ModuleChatHandler {
	return &ModuleChatHandlerImpl{
		moduleChat,
	}
}
